<Page x:Class="MyOwnGame.Views.EditorView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:controls="clr-namespace:MyOwnGame.Controls"
      xmlns:model="clr-namespace:MyOwnGame.Models"
      xmlns:vm="clr-namespace:MyOwnGame.ViewModels"
      xmlns:heplers="clr-namespace:MyOwnGame.XamlHelpers"
      xmlns:fa="http://schemas.fontawesome.io/icons/"
      mc:Ignorable="d"
      d:DataContext="{d:DesignInstance Type=vm:EditorViewModel}"
      x:Name="RootElement">

    <Page.Resources>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize"
                    Value="15" />
            <Setter Property="TextWrapping"
                    Value="Wrap" /> 
        </Style>
        <Style TargetType="{x:Type controls:Popup}">
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="BorderBrush"
                    Value="Blue" />
            <Setter Property="MinWidth"
                    Value="300" />
            <Setter Property="MinHeight"
                    Value="300" />
            <Setter Property="Background"
                    Value="{StaticResource PopupOverlayBackground}" />
            <Setter Property="Padding"
                    Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:Popup}">
                        <Grid x:Name="Overlay"
                              Background="{TemplateBinding Background}"
                              Visibility="Collapsed"
                              Opacity="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="AdaptiveStates">

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="InteractivityStates">
                                    <VisualState x:Name="Opened">
                                        <Storyboard>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="20">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                                      Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Overlay"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                                                      Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Overlay"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Closed">
                                        <Storyboard>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                                      Value="20">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Overlay"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                                                      Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Overlay"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="PopupBorder"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    MinWidth="{TemplateBinding MinWidth}"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    MaxWidth="500"
                                    Padding="{TemplateBinding Padding}"
                                    Background="White">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button"
               BasedOn="{StaticResource FlatButtonStyle}">
            <Setter Property="MinWidth"
                    Value="40" />
            <Setter Property="MinHeight"
                    Value="32" />
            <Setter Property="Margin"
                    Value="4" />
        </Style>
    </Page.Resources>

    <controls:ContentHost IsPreloaderVisible="{Binding IsPreloaderVisible}">
        <controls:ContentHost.MainContent>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="50" />
                </Grid.RowDefinitions>

                <GridSplitter Grid.Column="1"
                              Grid.RowSpan="3"
                              Width="1"
                              IsHitTestVisible="False"
                              Background="Gray"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Stretch" />

                <GridSplitter Grid.Column="2"
                              Grid.RowSpan="3"
                              Width="1"
                              IsHitTestVisible="False"
                              Background="Gray"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Stretch" />

                <GridSplitter ResizeDirection="Rows"
                              Grid.ColumnSpan="3"
                              Grid.Row="0"
                              Width="Auto"
                              Height="1"
                              IsHitTestVisible="False"
                              Background="Gray"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Bottom"
                              Margin="0" />

                <GridSplitter ResizeDirection="Rows"
                              Grid.ColumnSpan="3"
                              Grid.Row="3"
                              Width="Auto"
                              Height="1"
                              IsHitTestVisible="False"
                              Background="Gray"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Top"
                              Margin="0" />

                <TextBlock Text="Раунды"
                           FontSize="14"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center" />

                <ListView Grid.Column="0"
                          Grid.Row="1"
                          Padding="0" Margin="0"
                          ScrollViewer.VerticalScrollBarVisibility="Hidden"
                          ItemsSource="{Binding Rounds}"
                          SelectedItem="{Binding ItemRound}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="12 0 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Name}"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           TextWrapping="Wrap" />
                                <Button HorizontalAlignment="Right"
                                        Grid.Column="1"
                                        Click="DeleteRound_Click" 
                                        ToolTip="Удалить" >
                                    <fa:FontAwesome Icon="Remove"
                                                    FontSize="15" />
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Button Grid.Column="0"
                        Grid.Row="2" 
                        ToolTip="Добавить"
                        ToolTipService.Placement="Top"
                        ToolTipService.VerticalOffset="-5"
                        Command="{Binding OpenRoundPopupCommand}">
                    <fa:FontAwesome Icon="Plus"
                                    FontSize="15" />
                </Button>

                <TextBlock Text="Темы"
                           Grid.Column="1"
                           FontSize="14"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center" />

                <ListView Grid.Column="1"
                          Grid.Row="1"
                          Padding="0" 
                          Margin="0"
                          ScrollViewer.VerticalScrollBarVisibility="Hidden"
                          ItemsSource="{Binding Topics}"
                          SelectedItem="{Binding ItemTopic}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="12 0 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="80" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Name}"
                                           Grid.Column="0"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           TextWrapping="Wrap" />
                                <Button Click="DeleteTopic_Click"
                                        HorizontalAlignment="Right" 
                                        ToolTip="Удалить" 
                                        Grid.Column="1">
                                    <fa:FontAwesome Icon="Remove"
                                                    FontSize="15" />
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Button Grid.Column="1"
                        Grid.Row="2" 
                        ToolTip="Добавить"
                        ToolTipService.Placement="Top"
                        ToolTipService.VerticalOffset="-5"
                        Command="{Binding OpenTopicPopupCommand}">
                    <fa:FontAwesome Icon="Plus"
                                    FontSize="15" />
                </Button>

                <TextBlock Text="Вопросы"
                           FontSize="14"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Grid.Column="2" />

                <ListView Grid.Column="2"
                          Grid.Row="1" 
                          ItemsSource="{Binding Questions}"
                          SelectedItem="{Binding ItemQuestion}"
                          ScrollViewer.VerticalScrollBarVisibility="Hidden"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" 
                                          Width="400" 
                                          Margin="12">
                                <Border BorderBrush="Black"
                                        BorderThickness="1" >
                                    <StackPanel>

                                        <TextBlock Text="{Binding Text}"
                                                   HorizontalAlignment="Center"
                                                   TextWrapping="Wrap"
                                                   Margin="6" />

                                        <TextBlock Text="{Binding Price}"
                                                   HorizontalAlignment="Center"
                                                   Margin="0 0 0 6" />

                                        <TextBlock Text="{Binding Tag, Converter={StaticResource EnumConverter}}"
                                                   HorizontalAlignment="Center"
                                                   Margin="0 0 0 6" />

                                        <Button Click="DeleteQuestion_Click"
                                                Grid.Column="1"
                                                VerticalAlignment="Bottom"
                                                ToolTip="Удалить">
                                            <fa:FontAwesome Icon="Remove"
                                                            FontSize="15" />
                                        </Button>
                                    </StackPanel>
                                </Border>
                            </ScrollViewer>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>

                <StackPanel Orientation="Horizontal"
                            Grid.Column="2"
                            Grid.Row="2">
                    <Button Width="100"
                            ToolTip="На главную"
                            ToolTipService.Placement="Top"
                            ToolTipService.VerticalOffset="-5"
                            Command="{Binding GoBackCommand}" >
                        <fa:FontAwesome Icon="ArrowLeft"
                                        FontSize="15" />
                    </Button>
                    <Button ToolTip="Добавить"
                            ToolTipService.Placement="Top"
                            ToolTipService.VerticalOffset="-5"
                            Command="{Binding OpenQuestionPopupCommand}" >
                        <fa:FontAwesome Icon="Plus"
                                        FontSize="15" />
                    </Button>
                </StackPanel>

                <controls:Popup IsOpen="{Binding RoundPopup}"
                                Grid.ColumnSpan="3"
                                Grid.RowSpan="3"
                                Padding="20 12">
                    <StackPanel>

                        <TextBlock Text="Введите название раунда"
                                   FontSize="15" />

                        <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="0 12 0 20"
                                 TextWrapping="WrapWithOverflow">
                        </TextBox>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="12" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button Content="Добавить"
                                    Command="{Binding AddRoundCommand}">
                            </Button>
                            <Button Content="Отмена"
                                    Command="{Binding CloseRoundPopupCommand}"
                                    Grid.Column="2">
                            </Button>
                        </Grid>
                    </StackPanel>
                </controls:Popup>

                <controls:Popup IsOpen="{Binding TopicPopup}"
                                Grid.ColumnSpan="3"
                                Padding="20 12"
                                Grid.RowSpan="3">
                    <StackPanel>
                        <TextBlock Text="Введите название темы:"
                                   FontSize="15" />

                        <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="WrapWithOverflow"
                                 Margin="0 10" />
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="12" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Button Content="Добавить"
                                    Command="{Binding AddTopicCommand}">
                            </Button>
                            <Button Content="Отмена"
                                    Command="{Binding CloseTopicPopupCommand}"
                                    Grid.Column="2">
                            </Button>
                        </Grid>
                    </StackPanel>
                </controls:Popup>

                <controls:Popup IsOpen="{Binding QuestionPopup}"
                                Grid.ColumnSpan="3"
                                Padding="20 12"
                                Grid.RowSpan="3">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="18" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="12" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="12" />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="1"
                                   Text="Введите вопрос:"
                                   FontSize="15" />

                        <TextBox Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="WrapWithOverflow"
                                 Grid.Row="2"
                                 Margin="0 10">
                        </TextBox>

                        <TextBlock Grid.Row="3"
                                   Text="Введите цену вопроса:"
                                   FontSize="15"
                                   Margin="0 10 0 0" />

                        <TextBox Text="{Binding Price, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="WrapWithOverflow"
                                 Grid.Row="4"
                                 Margin="0 10">
                        </TextBox>

                        <TextBlock Grid.Row="5"
                                   Text="Выберите тип вопроса:"
                                   FontSize="15"
                                   Margin="0 10 0 0" />

                        <ComboBox ItemsSource="{Binding Source={heplers:EnumToItemsSource {x:Type model:QuestionType}}}"
                                  SelectedValue="{Binding QuestionType, Converter={StaticResource EnumConverter}, ConverterParameter={x:Type model:QuestionType}}"
                                  Grid.Row="6" />

                        <TextBox Text="{Binding Answer, UpdateSourceTrigger=PropertyChanged}"
                                 Grid.Row="8" /> 

                        <Grid HorizontalAlignment="Stretch"
                              Grid.Row="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="12" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Button Content="Добавить"
                                    Command="{Binding AddQuestionCommand}">
                            </Button>
                            <Button Content="Отмена"
                                    Command="{Binding CloseQuestionPopupCommand}"
                                    Grid.Column="2">
                            </Button>
                        </Grid>
                    </Grid>
                </controls:Popup>
            </Grid>
        </controls:ContentHost.MainContent>
    </controls:ContentHost>
</Page>