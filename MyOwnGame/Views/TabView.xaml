<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:s="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:MyOwnGame.Controls"
             xmlns:vm="clr-namespace:MyOwnGame.ViewModels"
             x:Class="MyOwnGame.Views.TabView"
             mc:Ignorable="d"
             x:Name="Tab"
             d:DataContext="{d:DesignInstance Type={x:Type vm:TabViewModel}}">

    <UserControl.Resources>
        <Style TargetType="{x:Type controls:Popup}">
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="BorderBrush"
                    Value="Blue" />
            <Setter Property="MinHeight"
                    Value="300" />
            <Setter Property="Background"
                    Value="{StaticResource PopupOverlayBackground}" />
            <Setter Property="Padding"
                    Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:Popup}">
                        <Grid x:Name="Overlay"
                              Background="{TemplateBinding Background}"
                              Visibility="Collapsed"
                              Opacity="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="AdaptiveStates" />
                                <VisualStateGroup x:Name="InteractivityStates">
                                    <VisualState x:Name="Opened">
                                        <Storyboard>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="20">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                                      Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Overlay"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                                                      Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Overlay"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Closed">
                                        <Storyboard>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                                      Value="20">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Overlay"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                                                      Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Overlay"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="PopupBorder"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Width="500"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    Padding="{TemplateBinding Padding}"
                                    Background="White">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}"
               BasedOn="{StaticResource FlatButtonStyle}">
            <Setter Property="Height"
                    Value="48" />
            <Setter Property="FontSize"
                    Value="20" />
            <Setter Property="Width"
                    Value="240" />
        </Style>
    </UserControl.Resources>

    <Grid>
        <controls:AdaptiveListView Property="Height"
                                   ItemsSource="{Binding Categories}">
            <controls:AdaptiveListView.ItemTemplate>
                <DataTemplate>
                    <Grid VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Topic}"
                                   TextWrapping="Wrap"
                                   VerticalAlignment="Center"
                                   FontSize="28" />

                        <controls:AdaptiveListView ItemsSource="{Binding Items}"
                                                   Property="Width"
                                                   Grid.Column="1">
                            <controls:AdaptiveListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </controls:AdaptiveListView.ItemsPanel>
                            <controls:AdaptiveListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid x:Name="RootGrid"
                                          Margin="8">
                                        <Button Content="{Binding Price}"
                                                Command="{Binding DataContext.OpenPopUp, ElementName=Tab}"
                                                Height="{Binding ActualHeight, ElementName=RootGrid}"
                                                IsEnabled="{Binding IsNotAnswered}"
                                                CommandParameter="{Binding}"
                                                Style="{StaticResource QuestionButtonStyle}" />
                                    </Grid>
                                </DataTemplate>
                            </controls:AdaptiveListView.ItemTemplate>
                        </controls:AdaptiveListView>
                    </Grid>
                </DataTemplate>
            </controls:AdaptiveListView.ItemTemplate>
        </controls:AdaptiveListView>

        <controls:Popup IsOpen="{Binding AuctionPopup}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="8" />
                </Grid.RowDefinitions>

                <TextBlock Text="Аукцион"
                           FontSize="28"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontWeight="Bold"
                           Foreground="#333" />

                <Button Content="Показать вопрос"
                        Command="{Binding CloseAuctionPopup}"
                        Grid.Row="1" />
            </Grid>
        </controls:Popup>

        <controls:Popup IsOpen="{Binding AllPopup}">
            <Grid x:Name="PopupContent">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="VisualStateGroup">
                        <VisualState x:Name="Question">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QuestionHost"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AnswerHost"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Collapsed</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Answer">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QuestionHost"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Collapsed</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AnswerHost"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="8" />
                </Grid.RowDefinitions>

                <TextBlock Text="{Binding ItemQuestion.Tag, Converter={StaticResource EnumConverter}}"
                           FontSize="20"
                           FontWeight="SemiBold" />
                <TextBlock Text="{Binding ItemQuestion.Price}"
                           HorizontalAlignment="Right"
                           FontWeight="SemiBold"
                           FontSize="20" />

                <Grid x:Name="QuestionHost"
                      Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Text="{Binding ItemQuestion.Text}"
                               TextWrapping="Wrap"
                               FontSize="24"
                               FontWeight="Bold"
                               Foreground="#333" 
                               HorizontalAlignment="Center" />

                    <Button Content="Ответ"
                            Grid.Row="1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <s:GoToStateAction StateName="Answer" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>

                <Grid x:Name="AnswerHost"
                      Visibility="Collapsed"
                      Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Text="{Binding ItemQuestion.Answer}"
                               TextWrapping="Wrap"
                               FontSize="24"
                               FontWeight="Bold"
                               Foreground="#333"
                               HorizontalAlignment="Center" />

                    <Button Content="Закрыть"
                            Command="{Binding ClouseAllPopup}"
                            Grid.Row="1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <s:GoToStateAction StateName="Question" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>

            </Grid>
        </controls:Popup>

    </Grid>
</UserControl>
